{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended"
  ],
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard",
  "labels": [
    "renovatebot"
  ],
  "commitMessageTopic": "{{depName}}",
  "commitMessageExtra": "to {{newVersion}}",
  "commitMessageSuffix": "",
  "prHourlyLimit": 99,
  "prConcurrentLimit": 99,
  "minimumReleaseAge": "1 day",
  "hostRules": [
    {
      "matchHost": "docker.io",
      "concurrentRequestLimit": 2
    }
  ],
  "helm-values": {
    "fileMatch": [
      "kubernetes/.+\\.ya?ml$"
    ],
    "ignorePaths": [
      "kubernetes/suspended"
    ]
  },
  "flux": {
    "fileMatch": [
      "kubernetes/.+\\.ya?ml$"
    ],
    "ignorePaths": [
      "kubernetes/suspended"
    ]
  },
  "kubernetes": {
    "fileMatch": [
      "kubernetes/.+\\.ya?ml$"
    ],
    "ignorePaths": [
      "kubernetes/suspended"
    ]
  },
  "customManagers": [
    {
      "customType": "regex",
      "fileMatch": [
        "kubernetes/apps/.+\\.ya?ml$",
        "kubernetes/config/.+\\.ya?ml$",
        "kubernetes/core/.+\\.ya?ml$",
        "kubernetes/flux/.+\\.ya?ml$",
        "kubernetes/templates/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "# renovate: datasource=docker\\n.*: ?(?<depName>.*?)\\n.*: ?(?<currentValue>.*?)\\n"
      ],
      "datasourceTemplate": "docker"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "kubernetes/apps/.+\\.ya?ml$",
        "kubernetes/config/.+\\.ya?ml$",
        "kubernetes/core/.+\\.ya?ml$",
        "kubernetes/flux/.+\\.ya?ml$",
        "kubernetes/templates/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "- (\\w+://)?(raw\\.)?github(usercontent)?\\.com\\/(?<depName>[\\w\\-_]+\\/[\\w\\-_]+)\\/(.+\\/)?(?<currentValue>v?[\\d+\\.]+)\\/"
      ],
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "kubernetes/apps/.+\\.ya?ml$",
        "kubernetes/config/.+\\.ya?ml$",
        "kubernetes/core/.+\\.ya?ml$",
        "kubernetes/flux/.+\\.ya?ml$",
        "kubernetes/templates/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\n.*: ?(?<currentValue>.*?)\\n"
      ]
    },
    {
      "customType": "regex",
      "fileMatch": [
        "kubernetes/apps/.+\\.ya?ml$",
        "kubernetes/config/.+\\.ya?ml$",
        "kubernetes/core/.+\\.ya?ml$",
        "kubernetes/flux/.+\\.ya?ml$",
        "kubernetes/templates/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*=?))?( versionTemplate=(?<versionTemplate>.*=?))?\\n.*: ?(\"?(?<currentValue>[^\"\\n]+=?)\"?)"
      ],
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      "extractVersionTemplate": "{{#if versionTemplate}}{{{versionTemplate}}}{{else}}{{/if}}"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "\\.nix$"
      ],
      "matchStrings": [
        "# renovate: repository=(?<registryUrl>.*?)\n *chart: .*/(?<depName>.*?)\n *version: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "\\.nix$"
      ],
      "matchStrings": [
         "chart:\\s*oci://(?<packageName>[^\\s]+)\\s*\\n\\s*version:\\s*(?<currentValue>[0-9a-zA-Z._-]+)"
      ],
      "datasourceTemplate": "docker"
    }
  ],
  "packageRules": [
    {
      "matchUpdateTypes": [
        "major"
      ],
      "labels": [
        "type/major"
      ]
    },
    {
      "matchUpdateTypes": [
        "minor"
      ],
      "labels": [
        "type/minor"
      ]
    },
    {
      "matchUpdateTypes": [
        "patch",
        "digest"
      ],
      "labels": [
        "type/patch"
      ]
    },
    {
      "matchDatasources": [
        "helm"
      ],
      "addLabels": [
        "renovate/helm"
      ],
      "semanticCommitScope": "helm-chart"
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "addLabels": [
        "renovate/container"
      ],
      "semanticCommitScope": "docker-image"
    },
    {
      "groupName": "traefik",
      "matchPackageNames": [
        "/traefik/"
      ]
    },
    {
      "groupName": "coredns",
      "matchPackageNames": [
        "/coredns/"
      ]
    },
    {
      "groupName": "cilium",
      "matchPackageNames": [
        "/cilium/"
      ]
    },
    {
      "groupName": "prometheus",
      "matchPackageNames": [
        "/prometheus/",
        "/thanos/"
      ]
    },
    {
      "groupName": "immich",
      "matchPackageNames": [
        "/immich-server/",
        "/immich-machine-learning/",
        "/immich/",
        "/immich-app/"
      ]
    }
  ]
}
