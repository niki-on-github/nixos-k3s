apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: &db ${APP_NAME}-postgresql
  namespace: ${APP_NAMESPACE}
  annotations:
    cnpg.io/skipEmptyWalArchiveCheck: enabled
spec:
  instances: 1

  monitoring:
    enablePodMonitor: true
    # Ref: https://github.com/cloudnative-pg/cloudnative-pg/issues/2501
    podMonitorMetricRelabelings:
      - { sourceLabels: ["cluster"], targetLabel: cnpg_cluster, action: replace }
      - { regex: cluster, action: labeldrop }
 
  backup:
    retentionPolicy: "${POSTGRES_BACKUP_RETENTION}"        
    barmanObjectStore:
      destinationPath: "s3://${CONFIG_MINIO_BACKUP_POSTGRES_BUCKET}/${APP_NAME}"
      endpointURL: "http://${CONFIG_MINIO_BACKUP_DEST_ENDPOINT}"    
      s3Credentials:
        accessKeyId:
          name: &credentials ${APP_NAME}-postgresql-backup-credentials
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: *credentials          
          key: ACCESS_SECRET_KEY   
        region:
          name: *credentials         
          key: REGION   
      
  externalClusters:
    - name: *db
      barmanObjectStore:
        destinationPath: "s3://${CONFIG_MINIO_BACKUP_POSTGRES_BUCKET}/${APP_NAME}"
        endpointURL: "http://${CONFIG_MINIO_BACKUP_SRC_ENDPOINT}"
        s3Credentials:  
          accessKeyId:
            name: *credentials
            key: ACCESS_KEY_ID
          secretAccessKey:
            name: *credentials          
            key: ACCESS_SECRET_KEY   
          region:
            name: *credentials        
            key: REGION
    
  bootstrap:
    ${POSTGRES_BOOTSTRAP_CMD:-recovery}:
      source: *db
      database: ${POSTGRES_DATABASE}
      owner: ${SECRET_DATABASE_USER}
      secret:
        name: ${APP_NAME}-postgresql-credentials

  storage:
    pvcTemplate:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 4Gi
      storageClassName: local-temp
      volumeMode: Filesystem
