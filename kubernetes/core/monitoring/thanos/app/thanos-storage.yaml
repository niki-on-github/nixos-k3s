---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: thanos-objstore-config
  namespace: monitoring
stringData:
  objstore.yml: |-
    type: s3
    config:
      insecure: false
      bucket: "thanos"
      endpoint: "minio.monitoring"
      access_key: "${SECRET_MINIO_CLUSTER_ACCESS_KEY_BASE64}"
      secret_key: "${SECRET_MINIO_CLUSTER_SECRET_KEY_BASE64}"
      http_config:
        insecure_skip_verify: true
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: minio-thanos-storage-configuration
  namespace: monitoring
stringData:
  # see https://github.com/minio/minio/blob/master/docs/erasure/storage-class/README.md
  # WARNING: we have set parity to 0 with MINIO_STORAGE_CLASS_STANDARD="EC:0"!
  config.env: |-
    export MINIO_ROOT_USER="${SECRET_MINIO_CLUSTER_ACCESS_KEY_BASE64}"
    export MINIO_ROOT_PASSWORD="${SECRET_MINIO_CLUSTER_SECRET_KEY_BASE64}"
    export MINIO_STORAGE_CLASS_STANDARD="EC:0"
    export MINIO_BROWSER="on"
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: minio-thanos-storage-user
  namespace: monitoring
stringData:
  CONSOLE_ACCESS_KEY: ${SECRET_MINIO_CLUSTER_ACCESS_KEY}
  CONSOLE_SECRET_KEY: ${SECRET_MINIO_CLUSTER_SECRET_KEY}
---
apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  labels:
    app: minio
  name: minio
  namespace: monitoring
spec:
  configuration:
    name: minio-thanos-storage-configuration
  users:
    - name: minio-thanos-storage-user
  buckets:
  - name: "thanos"
    region: "local"
    objectLock: false
  pools:
  - name: thanos-pool-0
    servers: 1
    volumesPerServer: 1
    volumeClaimTemplate:
      spec:
        storageClassName: "local-persistent"
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
