apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 15m
  timeout: 20m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 55.5.1
      interval: 1h
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system

  values:
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        receivers:
          - name: "email"
            email_configs:
              - to: '${SECRET_SIGNAL_PHONE_NUMBER}@signal.localdomain'
                from: 'alertmanager@${SECRET_DOMAIN}'
                smarthost: "email2signal.notification.svc:8025"
                send_resolved: true
                require_tls: false
        route:
          group_by: ["alertname", "job"]
          group_wait: 1m
          group_interval: 10m
          repeat_interval: 12h
          receiver: email
          routes:
            - receiver: email
              matchers:
                - severity = "critical"
              continue: true
        inhibit_rules:
          - source_matchers:
              - severity = "critical"
            target_matchers:
              - severity = "warning"
            equal: ["alertname", "namespace"]

      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
        hosts:
          - "alert.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "alert.${SECRET_DOMAIN}"

      alertmanagerSpec:
        replicas: 1
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: local-persistent
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 2Gi

    grafana:
      enabled: false
      defaultDashboardsTimezone: "${CONFIG_TIMEZONE}"
      forceDeployDatasources: false
      forceDeployDashboards: true

    nodeExporter:
      # we install prometheus-node-exporter on host system
      enabled: false

    prometheus:
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "__replica__"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 6h
        enableAdminAPI: true
        walCompression: true
        enableFeatures:
          - auto-gomaxprocs
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-persistent
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 5Gi
        thanos:
          image: quay.io/thanos/thanos:v0.33.0
          # renovate: datasource=docker depName=quay.io/thanos/thanos
          version: "0.33.0"
          objectStorageConfig:
            name: thanos-objstore-config
            key: objstore.yml

        resources:
          requests:
            cpu: 50m
            memory: 128M

      thanosService:
        enabled: true

      thanosServiceMonitor:
        enabled: true


