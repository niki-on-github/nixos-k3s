# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ${APP_NAME}
  namespace: ${APP_NAMESPACE}
spec:
  interval: 10m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  values:
    controllers:
      ${APP_NAME}:
        pod:
          securityContext:
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [10000]

        initContainers:
          init:
            image:
              repository: busybox
              tag: "1.37.0"
            command:
              - /bin/sh
              - -c
            args:
              - |
                chown 1000:1000 /usr/src/app/tmp /usr/src/app/log
                chmod +t /tmp
            securityContext:
              runAsUser: 0

        containers:
          redis:
            image:
              # renovate: datasource=docker
              repository: docker.io/library/redis
              tag: 7.4.2

          app:
            dependsOn: redis
            image:
              repository: ghcr.io/manyfold3d/manyfold
              tag: 0.99.0
          
            env:
              DATABASE_ADAPTER: postgresql
              DATABASE_PORT: 5432
              DATABASE_USER:
                valueFrom:
                  secretKeyRef:
                    name: &postgresqlCredentials "${APP_NAME}-postgresql-credentials"
                    key: username
              DATABASE_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: *postgresqlCredentials
                    key: password
              DATABASE_NAME:
                valueFrom:
                  secretKeyRef:
                    name: *postgresqlCredentials
                    key: database
              DATABASE_HOST:
                valueFrom:
                  secretKeyRef:
                    name: *postgresqlCredentials
                    key: uri
              REDIS_URL: redis://127.0.0.1:6379
              SECRET_KEY_BASE: "${SECRET_MANYFOLD_SECRET_KEY_BASE}"
              PUID: 1000
              PGID: 1000
              MULTIUSER: false
            
            securityContext:
              runAsUser: 0 # NOTE: container use tools like s6-applyuidgid that can only run by root
              privileged: false
              capabilities:
                drop: ["ALL"]
                add: ["CHOWN", "DAC_OVERRIDE", "SETUID", "SETGID"]
 
    service:
      webui:
        controller: ${APP_NAME}
        ports:
          http:
            port: 3214

    ingress:
      webui:
        className: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: "authentication-auth@kubernetescrd"
        hosts:
          - host: &ingress "manyfold.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: webui
                  port: http
        tls:
          - hosts:
              - *ingress
        
    persistence:
      data:
        existingClaim: "${APP_NAME}-pvc"
        advancedMounts:
          ${APP_NAME}:
            app:
              - path: /libraries
        
      tmpfs:
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: /usr/src/app/tmp
            subPath: app-tmp
          - path: /usr/src/app/log
            subPath: app-log
          - path: /tmp
            subPath: tmp

