apiVersion: v1
kind: ConfigMap
metadata:
  name: ${APP_NAME}-mongo-init
  namespace: ${APP_NAMESPACE}
data:
  initMongo.js: |
    db.getSiblingDB("unifi").createUser({user: "unifi", pwd: "unifi1234", roles: [{role: "readWrite", db: "unifi"}]});
    db.getSiblingDB("unifi_stat").createUser({user: "unifi", pwd: "unifi1234", roles: [{role: "readWrite", db: "unifi_stat"}]});
---
apiVersion: traefik.containo.us/v1alpha1
kind: ServersTransport
metadata:
  name: ${APP_NAME}-transport
  namespace: ${APP_NAMESPACE}
spec:
  insecureSkipVerify: true
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app ${APP_NAME}
  namespace: ${APP_NAMESPACE}
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      interval: 1h
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  values:
    global:
      nameOverride: *app

    controllers:
      main:
        initContainers:
          init:
            image:
              repository: busybox
              tag: "1.36.1"
            command:
            - "/bin/mkdir"
            args:
            - "-p"
            - "/init/db"
            - "/init/config"         

        containers:
          main:
            image:
              repository: lscr.io/linuxserver/unifi-network-application
              # TODO tag
              tag: latest

            dependsOn:
              - db
              
            env:
              PUID: 1000
              PGID: 1000
              TZ: "Etc/UTC"
              MONGO_USER: unifi
              MONGO_PASS: unifi1234
              MONGO_HOST: 127.0.0.1
              MONGO_PORT: 27017
              MONGO_DBNAME: unifi
  
          db:
            image:
              repository: mongo
              tag: "4.4.26"
 
    service:
      main:
        annotations:
          traefik.ingress.kubernetes.io/service.serversscheme: https
          traefik.ingress.kubernetes.io/service.serverstransport: "${APP_NAMESPACE}-${APP_NAME}-transport@kubernetescrd"
        ports:
          http:
            port: 8443
            protocol: HTTPS
      stun:
        controller: main
        enabled: true
        type: LoadBalancer
        ports:
          discovery:
            enabled: true
            port: 3478
            protocol: UDP
      ap-discovery:
        controller: main
        enabled: true
        type: LoadBalancer
        ports:
          listen:
            enabled: true
            port: 10001
            protocol: UDP
      device-communication:
        controller: main
        enabled: true
        type: LoadBalancer
        ports:
          listen:
            enabled: true
            port: 8080
            protocol: TCP

    ingress:
      main:
        enabled: true
        className: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
        hosts:
          - host: &ingress "unifi.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *ingress
        
    persistence:
      data:
        enabled: true
        existingClaim: "${APP_NAME}-pvc"
        advancedMounts:
          main:
            init:
              - path: /init
            db:
              - path: /data/db
                subPath: "db"
            main:
              - path: /config
                subPath: "config"
      init:
        enabled: true
        type: configMap
        name: ${APP_NAME}-mongo-init
        advancedMounts:
          main:
            db:
              - path: /docker-entrypoint-initdb.d/init-mongo.js
                subPath: initMongo.js
