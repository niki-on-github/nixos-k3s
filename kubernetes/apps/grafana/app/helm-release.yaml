# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app grafana
  namespace: monitoring
spec:
  interval: 10m
  chart:
    spec:
      chart: grafana
      version: 8.4.2
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system

  values:
    nameOverride: *app

    service:
      portName: http
      port: 3000

    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      hosts:
        - "grafana.${SECRET_DOMAIN}"
      tls:
        - hosts:
            - "grafana.${SECRET_DOMAIN}"

    adminUser: admin
    adminPassword: "${SECRET_WEBSERVICES_PASSWORD}"

    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder

      datasources:
        enabled: false
        searchNamespace: ALL

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            disableDeletion: false
            editable: true
            folder: ""
            orgId: 1
            type: file
            options:
              path: /var/lib/grafana/dashboards/default
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: cluster
            orgId: 1
            folder: Cluster
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/cluster
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: thanos
            orgId: 1
            folder: Thanos
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/thanos
          # - name: cilium
          #   orgId: 1
          #   folder: Cilium
          #   type: file
          #   disableDeletion: false
          #   editable: true
          #   options:
          #     path: /tmp/dashboards/cilium


    dashboards:
      default:
        opnsense:
          gnetId: 16197
          revision: 1
          datasource:
            - { name: DS_INFLUXDB2, value: influxdb }
        
      cluster:
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        # cloudnative-pg:
        #   url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/grafana-dashboard.json
        #   datasource: Prometheus
        # minio:
        #   # renovate: depName="MinIO Dashboard"
        #   gnetId: 13502
        #   revision: 24
        #   datasource:
        #     - { name: DS_PROMETHEUS, value: Prometheus }
 
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Prometheus

      kubernetes:
        k8s-system-api-server:
          gnetId: 15761
          revision: 15
          datasource: Prometheus
        k8s-views-global:
          gnetId: 15757
          revision: 35
          datasource: Prometheus
        k8s-views-nodes:
          gnetId: 15759
          revision: 27
          datasource: Prometheus
        k8s-views-namespaces:
          gnetId: 15758
          revision: 32
          datasource: Prometheus
        k8s-views-pods:
          gnetId: 15760
          revision: 26
          datasource: Prometheus

      thanos:
        thanos-bucket-replicate:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/bucket-replicate.json
          datasource: Prometheus
        thanos-compact:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/compact.json
          datasource: Prometheus
        thanos-overview:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/overview.json
          datasource: Prometheus
        thanos-query:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query.json
          datasource: Prometheus
        thanos-query-frontend:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query-frontend.json
          datasource: Prometheus
        thanos-receieve:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/receive.json
          datasource: Prometheus
        thanos-rule:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/rule.json
          datasource: Prometheus
        thanos-sidecar:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/sidecar.json
          datasource: Prometheus
        thanos-store:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/store.json
          datasource: Prometheus

    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query.monitoring:9090
          - name: loki
            type: loki
            access: proxy
            isDefault: false
            url: http://loki-stack.monitoring:3100
          - name: influxdb
            type: influxdb
            access: proxy
            isDefault: false
            url: http://influxdb.monitoring.svc.cluster.local:8086
            user: admin
            secureJsonData:
              token: ${SECRET_INFLUXDB_ADMIN_TOKEN}
              password: ${SECRET_DATABASE_PASSWORD}
            jsonData:
              version: Flux
              organization: ${CONFIG_INFLUXDB_ORG}
              defaultBucket: primary
        deleteDatasources:
          - name: Alertmanager
            orgId: 1
          - name: Prometheus
            orgId: 1
          - name: Loki
            orgId: 1


    plugins:
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      - isovalent-hubble-datasource


    serviceMonitor:
      enabled: true

    persistence:
      enabled: false

    env:
      GF_EXPLORE_ENABLED: true
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "${SECRET_GRAFANA_OAUTH_CLIENT_SECRET}"
      GF_AUTH_GENERIC_OAUTH_API_URL: https://auth.${SECRET_DOMAIN}/api/oidc/userinfo
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://auth.${SECRET_DOMAIN}/api/oidc/authorization
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://auth.${SECRET_DOMAIN}/api/oidc/token
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-tailscale
  namespace: monitoring
spec:
  ingressClassName: tailscale
  tls:
  - hosts:
    - "grafana"
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
