apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app ${APP_NAME}
  namespace: ${APP_NAMESPACE}
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      interval: 1h
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  values:
    global:
      nameOverride: *app

    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/niki-on-github/serien-and-movie-planer
              tag: v1.1.0

            env:
              TZ: &tz "${CONFIG_TIMEZONE}"
              POSTGRES_HOST: &postgresqlHost "${APP_NAME}-postgresql-rw.${APP_NAMESPACE}.svc.cluster.local"
              POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: &postgresqlCredentials "${APP_NAME}-postgresql-credentials"
                    key: username
              POSTGRES_PASSWORD:       
                valueFrom:
                  secretKeyRef:
                    name: *postgresqlCredentials
                    key: password
              POSTGRES_DB:
                valueFrom:
                  secretKeyRef:
                    name: *postgresqlCredentials
                    key: database

      crawler:
        containers:
          main:
            image:
              repository: ghcr.io/niki-on-github/serien-and-movie-crawler
              tag: v1.1.0

            env:
              TZ: *tz
              POSTGRES_HOST: *postgresqlHost
              THE_MOVIE_DB_API_KEY: "${SECRET_THE_MOVIE_DB_API_KEY}"      
              POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: *postgresqlCredentials
                    key: username
              POSTGRES_PASSWORD:       
                valueFrom:
                  secretKeyRef:
                    name: *postgresqlCredentials
                    key: password
              POSTGRES_DB:
                valueFrom:
                  secretKeyRef:
                    name: *postgresqlCredentials
                    key: database            

    service:
      main:
        ports:
          http:
            port: 8888

    ingress:
      main:
        enabled: true
        className: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: "security-auth@kubernetescrd"
        hosts:
          - host: &ingress "planer.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *ingress
