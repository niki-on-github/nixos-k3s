apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app "${APP_NAME}"
  namespace: &ns ${APP_NAMESPACE}
  annotations:
    app.kubernetes.io/managed-by: "Helm"
    meta.helm.sh/release-name: *app
    meta.helm.sh/release-namespace: *ns
spec:
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  values:
    global:
      nameOverride: *app

    defaultPodOptions:
      labels:
        vpn: "enabled"

    controllers:
      main:
        initContainers:
          init:
            image:
              repository: busybox
              tag: "1.36.1"
            command:
            - "/bin/sh"
            args:
            - "/init.sh"

        containers:
          main:
            image:
              repository: nzbgetcom/nzbget
              tag: "v23.0"

            env:
              TZ: "${CONFIG_TIMEZONE}"
              UMASK: "000"
              NZBGET_USER: ""
              NZBGET_PASS: ""
              PUID: 1000
              PGID: 1000
      

    service:
      main:
        ports:
          http:
            port: 6789

    ingress:
      main:
        enabled: true
        className: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: "authentication-auth@kubernetescrd"
        hosts:
          - host: &ingress "nzbget.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *ingress

    configMaps:
      setup:
        enabled: true
        data:
          init.sh: |
            #!/bin/sh
            echo "run $0"
            mkdir -p /downloads/scripts
            cp -v /scripts/* /downloads/scripts/
            chmod 777 -R /downloads/scripts/
            
    persistence:
      config:
        enabled: true
        existingClaim: "${APP_NAME}-pvc"
        globalMounts:
          - path: /config
      downloads:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 32Gi
        storageClass: "${CONFIG_NFS_STORAGE_CLASS_NAME}"
        globalMounts:
          - path: /downloads
      scripts:
        enabled: true
        type: configMap
        name: ${APP_NAME}-scripts
        defaultMode: 493
        advancedMounts:
          main:
            init:
              - path: /scripts
      setup:
        enabled: true
        type: configMap
        name: ${APP_NAME}-setup
        defaultMode: 493
        advancedMounts:
          main:
            init:
              - path: /init.sh
                subPath: init.sh
