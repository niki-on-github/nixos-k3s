# Middleware to fix https proxy error: The CSRF session token is missing
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: ${APP_NAME}-cors
  namespace: ${APP_NAMESPACE}
spec:
  headers:
    customRequestHeaders:
      Referer: "https://changedetection.${SECRET_DOMAIN}"
      X-Forwarded-Proto: https
    accessControlAllowMethods:
      - "GET"
      - "OPTIONS"
      - "PUT"
      - "POST"
    accessControlAllowHeaders:
      - "*"
    accessControlAllowOriginList:
      - "*"
    accessControlMaxAge: 100
    addVaryHeader: true
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ${APP_NAME}
  namespace: ${APP_NAMESPACE}
spec:
  interval: 10m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  values:
    defaultPodOptions:
      hostname: changedetection

    controllers:
      playwright:
        containers:
          main:
            image:
              repository: docker.io/dgtlmoon/sockpuppetbrowser
              tag: "latest"
            securityContext:
              capabilities:
                add: ["SYS_ADMIN"]
            env:
              SCREEN_WIDTH: "1920"
              SCREEN_HEIGHT: "1024"
              SCREEN_DEPTH: "16"
              MAX_CONCURRENT_CHROME_PROCESSES: "4"
      ${APP_NAME}:
        containers:
          app:
            image:
              repository: ghcr.io/dgtlmoon/changedetection.io
              tag: "0.48.01"
            env:
              TZ: "${CONFIG_TIMEZONE}"
              PORT: &port 5000
              BASE_URL: "https://changedetection.${SECRET_DOMAIN}"
              USE_X_SETTINGS: 1
              FETCH_WORKERS: 4
              PLAYWRIGHT_DRIVER_URL: "ws://${APP_NAME}-playwright.${APP_NAMESPACE}.svc.cluster.local.:3000/?stealth=1&--disable-web-security=true"
              
    service:
      main:
        controller: ${APP_NAME}
        annotations:          
          traefik.ingress.kubernetes.io/service.sticky.cookie: "true"
          traefik.ingress.kubernetes.io/service.sticky.cookie.sameSite: "None"
          traefik.ingress.kubernetes.io/service.sticky.cookie.secure: "true"
          traefik.ingress.kubernetes.io/service.sticky.cookie.httponly: "true"
        ports:
          http:
            port: *port
      playwright:
        controller: playwright
        ports:
          http:
            port: 3000

    ingress:
      main:
        className: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: ${APP_NAMESPACE}-${APP_NAME}-cors@kubernetescrd
        hosts:
          - host: &ingress "changedetection.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *ingress
        
    persistence:
      datastore:
        existingClaim: "${APP_NAME}-pvc"
        globalMounts:
          - path: /datastore

